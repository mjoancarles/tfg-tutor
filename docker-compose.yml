services:

  qdrant:
    image: qdrant/qdrant:latest
    container_name: qdrant
    ports:
      - "6333:6333"
      - "6334:6334"
    expose:
      - 6333
      - 6334
    volumes:
      - ./qdrant_storage:/qdrant/storage #- /data/users/jcmontero/qdrant_storage:/qdrant/storage
    networks:
      - graphrag_network
    extra_hosts:
      - "host.docker.internal:host-gateway"

  neo4j:
    image: neo4j:5.25
    container_name: neo4j
    ports:
      - "7200:7474"  # HTTP port for Neo4j Browser
      - "7300:7687"  # Bolt port for Neo4j connection
    environment:
      - NEO4J_AUTH=neo4j/password
      - NEO4JLABS_PLUGINS=["apoc"]
      - NEO4J_apoc_export_file_enabled=true
      - NEO4J_apoc_import_file_enabled=true
      - NEO4J_apoc_import_file_use__neo4j__config=true
      - NEO4J_dbms_security_procedures_unrestricted=apoc.*
    networks:
      - graphrag_network
    extra_hosts:
      - "host.docker.internal:host-gateway"
    volumes:
      - neo4j_data:/data
      - ./plugins:/plugins

  streamlit:
    build: ./app
    container_name: streamlit
    depends_on:
      - qdrant
    ports:
      - "443:8501" # host port 443 maps to container port 8501 443:8501
    networks:
      - graphrag_network
    extra_hosts:
      - "host.docker.internal:host-gateway"
    environment:
      - LLM_HOST=host.docker.internal #to be changed to llm
      - LLM_PORT=8000
      - EMBEDDINGS_HOST=host.docker.internal #to be changed to embeddings
      - EMBEDDINGS_PORT=8099
      - QDRANT_HOST=qdrant
      - QDRANT_PORT=6333
      - QDRANT_COLLECTION=publications
      - NEO4J_HOST=neo4j
      - NEO4J_PORT=7300
    volumes:
      - ./app:/app
      - ./plugins:/plugins

#  embeddings:
#    build: ./embeddings
#    container_name: embeddings
#    ports:
#      - "8055:8055"
#    deploy:
#      resources:
#        reservations:
#          devices:
#            - driver: nvidia
#              #count: 1
#              capabilities: [gpu]
#    networks:
#      - graphrag_network
#    extra_hosts:
#      - "host.docker.internal:host-gateway"
#
#  llm:
#    build: ./llm
#    container_name: llm
#    ports:
#      - "8070:8070"
#    deploy:
#      resources:
#        reservations:
#          devices:
#            - driver: nvidia
#              capabilities: [gpu]
#    networks:
#      - graphrag_network
#    environment:
#      - HUGGINGFACE_TOKEN_FILE=/run/secrets/huggingface_token
#    secrets:
#      - huggingface_token
#    extra_hosts:
#      - "host.docker.internal:host-gateway"


volumes:
  qdrant_storage:
  neo4j_data:

networks:
  graphrag_network:
    driver: bridge

secrets:
  huggingface_token:
    file: ./huggingface_token.txt
    